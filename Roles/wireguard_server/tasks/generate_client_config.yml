    - name: Generate WireGuard key pair
      become: true
      become_user: root
      ansible.builtin.command: "wg genkey"
      register: client_private_key_result
      changed_when: client_private_key_result.rc != 0

    - name: Copy client private key to file
      become: true
      become_user: root
      ansible.builtin.copy:
        content: "{{ client_private_key_result.stdout }}"
        dest: /tmp/client_private_key
        mode: "0600"
        force: false # Do not override if exists 
    
    - name: Fetch_public_key_file
      ansible.builtin.fetch:
        src: /tmp/client_private_key
        dest: ./
        flat: true 

    - name: Generate public key
      become: true
      become_user: root
      ansible.builtin.shell:
        cmd: "set -o pipefail && echo '{{ client_private_key_result.stdout }}' | wg pubkey"
        executable: "/bin/bash"
      register: client_public_key_result
      changed_when: client_public_key_result.rc != 0

      
    - name: Copy client public key to file
      become: true
      become_user: root
      ansible.builtin.copy:
        content: "{{ client_public_key_result.stdout }}"
        dest: /tmp/client_public_key
        mode: "0600"
        force: false # Do not override if exists 

    - name: Fetch_public_key_file
      ansible.builtin.fetch:
        src: /tmp/client_public_key
        dest: ./
        flat: true 
        
    - name: Get default DNS server
      become: true
      become_user: root
      ansible.builtin.shell:
        cmd: "set -o pipefail && resolvectl | grep 'Current DNS Server' | awk '{print $NF}' | head -n 1"
        executable: "/bin/bash"
      register: dns_server
      changed_when: dns_server.rc != 0

    - name: Create WireGuard configuration file for the client
      ansible.builtin.template:
        src: wg0_client.config.j2
        dest: /tmp/peer.conf
        force: true # Override if changed
        mode: "u=rw,g=rw,o=r"

    - name: Add client to the server peers
      become: true
      become_user: root
      ansible.builtin.command: "wg set wg0 peer {{ client_public_key_result.stdout }} allowed-ips 167.71.252.3"
      register: output
      changed_when: output.rc != 0

    - name: Fetch file
      ansible.builtin.fetch:
        src: /tmp/peer.conf
        dest: ./
        flat: true